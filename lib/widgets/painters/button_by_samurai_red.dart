import 'package:flutter/material.dart';

class ButtonBySamuraiRedPainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {

    Path path_0 = Path();
    path_0.moveTo(size.width*0.8846154,size.height*0.9688800);
    path_0.lineTo(size.width*0.2840237,size.height*0.9688800);

    Paint paint_0_stroke = Paint()..style=PaintingStyle.stroke..strokeWidth=2;
    paint_0_stroke.color=Colors.white.withOpacity(1.0);
    canvas.drawPath(path_0,paint_0_stroke);

    Path path_1 = Path();
    path_1.moveTo(0,size.height*0.9688889);
    path_1.lineTo(0,size.height*0.6247111);
    path_1.lineTo(size.width*0.1547047,0);
    path_1.lineTo(size.width,0);
    path_1.lineTo(size.width,size.height*0.4561067);
    path_1.lineTo(size.width*0.8887515,size.height*0.8766133);
    path_1.lineTo(size.width*0.2692308,size.height*0.8766133);
    path_1.lineTo(size.width*0.2547325,size.height*0.9688889);
    path_1.lineTo(0,size.height*0.9688889);
    path_1.close();

    Paint paint_1_fill = Paint()..style=PaintingStyle.fill;
    paint_1_fill.color = Color(0xffFF0049).withOpacity(1.0);
    canvas.drawPath(path_1,paint_1_fill);

    Path path_2 = Path();
    path_2.moveTo(size.width*0.1558095,size.height*0.2914889);
    path_2.lineTo(size.width*0.2009751,size.height*0.2914889);
    path_2.cubicTo(size.width*0.2048645,size.height*0.2914889,size.width*0.2071781,size.height*0.2989178,size.width*0.2079160,size.height*0.3137778);
    path_2.lineTo(size.width*0.2034899,size.height*0.3931111);
    path_2.lineTo(size.width*0.1921231,size.height*0.4210667);
    path_2.lineTo(size.width*0.2006734,size.height*0.4426000);
    path_2.lineTo(size.width*0.1942355,size.height*0.5555556);
    path_2.lineTo(size.width*0.1618450,size.height*0.5555556);
    path_2.lineTo(size.width*0.1651645,size.height*0.4966222);
    path_2.lineTo(size.width*0.1802533,size.height*0.4966222);
    path_2.lineTo(size.width*0.1826675,size.height*0.4550667);
    path_2.lineTo(size.width*0.1653657,size.height*0.4278667);
    path_2.lineTo(size.width*0.1582237,size.height*0.5536667);
    path_2.lineTo(size.width*0.1387089,size.height*0.5933333);
    path_2.lineTo(size.width*0.1558095,size.height*0.2914889);
    path_2.close();
    path_2.moveTo(size.width*0.1697917,size.height*0.3500444);
    path_2.lineTo(size.width*0.1662710,size.height*0.4123778);
    path_2.lineTo(size.width*0.1869929,size.height*0.3780000);
    path_2.lineTo(size.width*0.1886024,size.height*0.3500444);
    path_2.lineTo(size.width*0.1697917,size.height*0.3500444);
    path_2.close();
    path_2.moveTo(size.width*0.2464385,size.height*0.2975333);
    path_2.lineTo(size.width*0.2355746,size.height*0.4905778);
    path_2.lineTo(size.width*0.2533793,size.height*0.4905778);
    path_2.lineTo(size.width*0.2644444,size.height*0.2945111);
    path_2.lineTo(size.width*0.2809414,size.height*0.3319111);
    path_2.lineTo(size.width*0.2694740,size.height*0.5340222);
    path_2.cubicTo(size.width*0.2670598,size.height*0.5486289,size.width*0.2644444,size.height*0.5559333,size.width*0.2616278,size.height*0.5559333);
    path_2.lineTo(size.width*0.2140479,size.height*0.5559333);
    path_2.lineTo(size.width*0.2309473,size.height*0.2571111);
    path_2.lineTo(size.width*0.2464385,size.height*0.2975333);
    path_2.close();
    path_2.moveTo(size.width*0.3021787,size.height*0.2911111);
    path_2.lineTo(size.width*0.3199834,size.height*0.2911111);
    path_2.lineTo(size.width*0.3160604,size.height*0.3591111);
    path_2.lineTo(size.width*0.3291373,size.height*0.3897111);
    path_2.lineTo(size.width*0.3249124,size.height*0.4637556);
    path_2.lineTo(size.width*0.2960426,size.height*0.3991556);
    path_2.lineTo(size.width*0.3021787,size.height*0.2911111);
    path_2.close();
    path_2.moveTo(size.width*0.3376876,size.height*0.2911111);
    path_2.lineTo(size.width*0.3561964,size.height*0.2911111);
    path_2.lineTo(size.width*0.3413089,size.height*0.5532889);
    path_2.lineTo(size.width*0.2939302,size.height*0.5532889);
    path_2.lineTo(size.width*0.3086166,size.height*0.4917111);
    path_2.lineTo(size.width*0.3263207,size.height*0.4917111);
    path_2.lineTo(size.width*0.3376876,size.height*0.2911111);
    path_2.close();
    path_2.moveTo(size.width*0.4224030,size.height*0.2914889);
    path_2.lineTo(size.width*0.4561012,size.height*0.2914889);
    path_2.lineTo(size.width*0.4655568,size.height*0.3542000);
    path_2.lineTo(size.width*0.4292432,size.height*0.3542000);
    path_2.lineTo(size.width*0.4270302,size.height*0.3927333);
    path_2.lineTo(size.width*0.4590183,size.height*0.3927333);
    path_2.cubicTo(size.width*0.4619692,size.height*0.4020511,size.width*0.4630420,size.height*0.4136378,size.width*0.4622373,size.height*0.4274889);
    path_2.lineTo(size.width*0.4564030,size.height*0.5321333);
    path_2.cubicTo(size.width*0.4557994,size.height*0.5417044,size.width*0.4528154,size.height*0.5487556,size.width*0.4474503,size.height*0.5532889);
    path_2.lineTo(size.width*0.4162669,size.height*0.5532889);
    path_2.lineTo(size.width*0.4049000,size.height*0.4939778);
    path_2.lineTo(size.width*0.4403083,size.height*0.4939778);
    path_2.lineTo(size.width*0.4427225,size.height*0.4520444);
    path_2.lineTo(size.width*0.4141544,size.height*0.4520444);
    path_2.cubicTo(size.width*0.4089911,size.height*0.4520444,size.width*0.4068450,size.height*0.4438600,size.width*0.4077166,size.height*0.4274889);
    path_2.lineTo(size.width*0.4140538,size.height*0.3168000);
    path_2.cubicTo(size.width*0.4147917,size.height*0.3034511,size.width*0.4175746,size.height*0.2950156,size.width*0.4224030,size.height*0.2914889);
    path_2.close();
    path_2.moveTo(size.width*0.4891059,size.height*0.2914889);
    path_2.lineTo(size.width*0.5372893,size.height*0.2914889);
    path_2.cubicTo(size.width*0.5411787,size.height*0.2957711,size.width*0.5425201,size.height*0.3067267,size.width*0.5413130,size.height*0.3243556);
    path_2.lineTo(size.width*0.5282361,size.height*0.5555556);
    path_2.lineTo(size.width*0.5105320,size.height*0.5555556);
    path_2.lineTo(size.width*0.5173722,size.height*0.4342889);
    path_2.lineTo(size.width*0.4967509,size.height*0.4698000);
    path_2.lineTo(size.width*0.4898101,size.height*0.5925778);
    path_2.lineTo(size.width*0.4742183,size.height*0.5548000);
    path_2.lineTo(size.width*0.4807568,size.height*0.4388222);
    path_2.lineTo(size.width*0.5212953,size.height*0.3651556);
    path_2.lineTo(size.width*0.5223012,size.height*0.3466444);
    path_2.lineTo(size.width*0.5036917,size.height*0.3466444);
    path_2.lineTo(size.width*0.5011769,size.height*0.3904667);
    path_2.lineTo(size.width*0.4814609,size.height*0.4267333);
    path_2.lineTo(size.width*0.4891059,size.height*0.2914889);
    path_2.close();
    path_2.moveTo(size.width*0.5627515,size.height*0.2911111);
    path_2.lineTo(size.width*0.6328639,size.height*0.2911111);
    path_2.cubicTo(size.width*0.6372249,size.height*0.2953933,size.width*0.6388994,size.height*0.3063489,size.width*0.6378935,size.height*0.3239778);
    path_2.lineTo(size.width*0.6278343,size.height*0.5019111);
    path_2.lineTo(size.width*0.6054024,size.height*0.5476222);
    path_2.lineTo(size.width*0.6168698,size.height*0.3458889);
    path_2.lineTo(size.width*0.6085207,size.height*0.3458889);
    path_2.lineTo(size.width*0.5997692,size.height*0.4988889);
    path_2.lineTo(size.width*0.5762308,size.height*0.5506444);
    path_2.lineTo(size.width*0.5878994,size.height*0.3458889);
    path_2.lineTo(size.width*0.5795503,size.height*0.3458889);
    path_2.lineTo(size.width*0.5683846,size.height*0.5415778);
    path_2.lineTo(size.width*0.5458521,size.height*0.5903111);
    path_2.lineTo(size.width*0.5627515,size.height*0.2911111);
    path_2.close();
    path_2.moveTo(size.width*0.6770592,size.height*0.2975333);
    path_2.lineTo(size.width*0.6661953,size.height*0.4905778);
    path_2.lineTo(size.width*0.6840000,size.height*0.4905778);
    path_2.lineTo(size.width*0.6950651,size.height*0.2945111);
    path_2.lineTo(size.width*0.7115621,size.height*0.3319111);
    path_2.lineTo(size.width*0.7000947,size.height*0.5340222);
    path_2.cubicTo(size.width*0.6976805,size.height*0.5486289,size.width*0.6950651,size.height*0.5559333,size.width*0.6922485,size.height*0.5559333);
    path_2.lineTo(size.width*0.6446686,size.height*0.5559333);
    path_2.lineTo(size.width*0.6615680,size.height*0.2571111);
    path_2.lineTo(size.width*0.6770592,size.height*0.2975333);
    path_2.close();
    path_2.moveTo(size.width*0.7402426,size.height*0.4652667);
    path_2.lineTo(size.width*0.7352130,size.height*0.5532889);
    path_2.lineTo(size.width*0.7157988,size.height*0.5948444);
    path_2.lineTo(size.width*0.7328994,size.height*0.2933778);
    path_2.lineTo(size.width*0.7464793,size.height*0.3545778);
    path_2.lineTo(size.width*0.7444675,size.height*0.3908444);
    path_2.lineTo(size.width*0.7532189,size.height*0.4169111);
    path_2.lineTo(size.width*0.7627751,size.height*0.3965111);
    path_2.lineTo(size.width*0.7652899,size.height*0.3519333);
    path_2.lineTo(size.width*0.7491953,size.height*0.3519333);
    path_2.lineTo(size.width*0.7352130,size.height*0.2911111);
    path_2.lineTo(size.width*0.7810828,size.height*0.2911111);
    path_2.cubicTo(size.width*0.7847692,size.height*0.2991711,size.width*0.7860769,size.height*0.3130222,size.width*0.7850059,size.height*0.3326667);
    path_2.lineTo(size.width*0.7793728,size.height*0.4316444);
    path_2.lineTo(size.width*0.7664970,size.height*0.4554444);
    path_2.lineTo(size.width*0.7762544,size.height*0.4837778);
    path_2.lineTo(size.width*0.7720296,size.height*0.5589556);
    path_2.lineTo(size.width*0.7545266,size.height*0.5952222);
    path_2.lineTo(size.width*0.7587515,size.height*0.5200444);
    path_2.lineTo(size.width*0.7402426,size.height*0.4652667);
    path_2.close();
    path_2.moveTo(size.width*0.8063432,size.height*0.2914889);
    path_2.lineTo(size.width*0.8545266,size.height*0.2914889);
    path_2.cubicTo(size.width*0.8584142,size.height*0.2957711,size.width*0.8597574,size.height*0.3067267,size.width*0.8585503,size.height*0.3243556);
    path_2.lineTo(size.width*0.8454734,size.height*0.5555556);
    path_2.lineTo(size.width*0.8277692,size.height*0.5555556);
    path_2.lineTo(size.width*0.8346095,size.height*0.4342889);
    path_2.lineTo(size.width*0.8139882,size.height*0.4698000);
    path_2.lineTo(size.width*0.8070473,size.height*0.5925778);
    path_2.lineTo(size.width*0.7914556,size.height*0.5548000);
    path_2.lineTo(size.width*0.7979941,size.height*0.4388222);
    path_2.lineTo(size.width*0.8385325,size.height*0.3651556);
    path_2.lineTo(size.width*0.8395385,size.height*0.3466444);
    path_2.lineTo(size.width*0.8209290,size.height*0.3466444);
    path_2.lineTo(size.width*0.8184142,size.height*0.3904667);
    path_2.lineTo(size.width*0.7986982,size.height*0.4267333);
    path_2.lineTo(size.width*0.8063432,size.height*0.2914889);
    path_2.close();
    path_2.moveTo(size.width*0.8826036,size.height*0.5551778);
    path_2.lineTo(size.width*0.8648994,size.height*0.5551778);
    path_2.lineTo(size.width*0.8795858,size.height*0.2948889);
    path_2.lineTo(size.width*0.8999053,size.height*0.2488000);
    path_2.lineTo(size.width*0.8826036,size.height*0.5551778);
    path_2.close();
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return true;
  }
}